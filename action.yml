name: llama-cpp-action
description: Run llama.cpp in Github Actions workflows

inputs:
  prompt:
    description: The initial prompt
    required: true
  llama-cpp-url:
    description: URL of llama.cpp release
    required: false
    default: https://github.com/ggerganov/llama.cpp/releases/download/b3265/llama-b3265-bin-ubuntu-x64.zip
  model-url:
    description: URL of the model to use
    required: false
    default: https://huggingface.co/lmstudio-community/Meta-Llama-3-8B-Instruct-BPE-fix-GGUF/resolve/main/Meta-Llama-3-8B-Instruct-Q4_K_M.gguf

outputs:
  response:
    description: "The model's response"
    value: ${{ steps.inference.outputs.response }}

runs:
  using: composite
  steps:
    - shell: bash
      env:
        LLAMA_CPP_URL: ${{ inputs.llama-cpp-url }}
        MODEL_URL: ${{ inputs.model-url }}
      run: |
        : write urls to files
        echo "$LLAMA_CPP_URL" > llama-cpp-url.txt
        echo "$MODEL_URL" > model-url.txt

    - name: Cache llama.cpp
      id: cache-llama-cpp
      uses: actions/cache@v4
      with:
        key: llama-cpp-${{ hashFiles('llama-cpp-url.txt') }}
        path: |
          build

    - shell: bash
      if: steps.cache-llama-cpp.outputs.cache-hit != 'true'
      env:
        LLAMA_CPP_URL: ${{ inputs.llama-cpp-url }}
      run: |
        : download llama.cpp
        curl -L -o llama.zip "$LLAMA_CPP_URL"
        unzip llama.zip

    - name: Cache model
      id: cache-model
      uses: actions/cache@v4
      with:
        key: model-${{ hashFiles('model-url.txt') }}
        path: |
          model.gguf

    - shell: bash
      if: steps.cache-model.outputs.cache-hit != 'true'
      env:
        MODEL_URL: ${{ inputs.model-url }}
      run: |
        : download model
        curl -L -o model.gguf "$MODEL_URL"

    - id: inference
      shell: bash
      env:
        PROMPT: ${{ inputs.prompt }}
      run: |
        : run llama.cpp
        ./build/bin/llama-cli --model ./model.gguf --prompt "$PROMPT" > response.txt
        { echo "response<<EOF"; cat response.txt; echo "EOF"; } >> "$GITHUB_OUTPUT"
